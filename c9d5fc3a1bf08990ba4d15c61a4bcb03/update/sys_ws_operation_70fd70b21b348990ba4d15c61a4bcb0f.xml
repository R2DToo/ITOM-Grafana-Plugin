<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>5e3aadfe87625510406540c6cebb3582</enforce_acl>
        <http_method>POST</http_method>
        <name>V1-Variable-Generic</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	var table = request.body.data.targets[0].tableName || "";
	var nameColumn = request.body.data.targets[0].nameColumn || "";
	var idColumn = request.body.data.targets[0].idColumn || "";
	var sysparam = request.body.data.targets[0].sysparm || "";
	var limit = 9999;
	if (request.body.data.targets[0].limit) {
		if (request.body.data.targets[0].limit <= 10000 && request.body.data.targets[0].limit > 0)
			limit = request.body.data.targets[0].limit;
	}
	
	response.setContentType('application/json');

	if (table == "") {
		response.setError(new sn_ws_err.BadRequestError("Table name not provided"));
	} else if (nameColumn == "") {
		response.setError(new sn_ws_err.BadRequestError("Display value column not provided"));
	} else if (idColumn == "") {
		response.setError(new sn_ws_err.BadRequestError("Actual value column not provided"));
	}

	var metricData = new x_opti8_itom_grafa.GrafanaAPIBackend();
	var isTableAllowed = metricData.isTableAllowed(table);
	var doesTableExist = metricData.doesTableExist(table);

	if (isTableAllowed.allowed == false) {
		response.setError(new sn_ws_err.BadRequestError(isTableAllowed.message));
	} else if (doesTableExist.tableExists == false) {
		response.setError(new sn_ws_err.BadRequestError("The table requested does not exist"));
	} else {
		response.setStatus(200);
		var options = metricData.getGenericVariable(table, nameColumn, idColumn, sysparam, limit);
		response.setBody(options);
	}
})(request, response);]]></operation_script>
        <operation_uri>/api/x_opti8_itom_grafa/grafana_api/v1/variable/generic</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/v1/variable/generic</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>bstill-routley</sys_created_by>
        <sys_created_on>2022-01-05 20:04:22</sys_created_on>
        <sys_id>70fd70b21b348990ba4d15c61a4bcb0f</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>V1-Variable-Generic</sys_name>
        <sys_package display_value="ITOM Grafana Plugin" source="x_opti8_itom_grafa">c9d5fc3a1bf08990ba4d15c61a4bcb03</sys_package>
        <sys_policy/>
        <sys_scope display_value="ITOM Grafana Plugin">c9d5fc3a1bf08990ba4d15c61a4bcb03</sys_scope>
        <sys_update_name>sys_ws_operation_70fd70b21b348990ba4d15c61a4bcb0f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-24 17:56:34</sys_updated_on>
        <web_service_definition display_value="Grafana API">e579f07e1bf08990ba4d15c61a4bcb4f</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
